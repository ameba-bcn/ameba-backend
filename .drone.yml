---


kind: pipeline
name: default


steps:
- name: test
  image: docker:dind
  environment:
    DOCKER_USERNAME:
      from_secret: DOCKER_USERNAME
    DOCKER_PASSWORD:
      from_secret: DOCKER_PASSWORD
  volumes:
  - name: dockersock
    path: /var/run
  commands:
  - sleep 5 # give docker enough time to start
  - echo $DOCKER_PASSWORD > /tmp/docker_password
  - echo `cat /tmp/docker_password`
  - cat /tmp/docker_password | docker login -u $DOCKER_USERNAME --password-stdin registry.mngst.in
  - docker tag hello-world registry.mngst.in/hello-world-joni
  - docker push registry.mngst.in/hello-world-joni
#  - docker-compose pull ameba-backend
#  - if [[ $DRONE_BRANCH == dev* ]]; then
#      echo "Tagging ameba-backend docker image";
#      docker tag ameba-backend http://192.168.1.21:5000/ameba-backend:dev;
#      echo "Pushing ameba-backend docker image";
#      docker push http://192.168.1.21:5000/ameba-backend:dev;
#    elif [[ $DRONE_BRANCH == main ]]; then
#      echo "Tagging ameba-backend:latest docker image";
#      docker tag ameba-backend registry:5000/ameba-backend:latest;
#      echo "Pushing ameba-backend:latest docker image";
#      docker push registry:5000/ameba-backend:latest;
#    elif [[ $DRONE_BRANCH == release* ]]; then
#      echo "Tagging ameba-backend:release docker image";
#      docker tag ameba-backend registry:5000/ameba-backend:staging;
#      echo "Pushing ameba-backend:release docker image";
#      docker push registry:5000/ameba-backend:staging;
#    else
#      echo "Not pushing ameba-backend docker image";
#    fi

services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run


volumes:
- name: dockersock
  temp: {}